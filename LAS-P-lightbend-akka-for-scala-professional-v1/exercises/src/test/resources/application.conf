akka {
  loggers = [akka.testkit.TestEventListener]
  logging-filter = "akka.event.DefaultLoggingFilter"

  actor {
    debug {
      lifecycle = on
      unhandled = on
    }
    deployment {
      /create-barista/barista {
        router = round-robin-pool
        nr-of-instances = 4
      }
      /create-waiter/barista {
        router = round-robin-pool
        nr-of-instances = 4
      }
      /create-guest/barista {
        router = round-robin-pool
        nr-of-instances = 4
      }
      /add-to-guest-book/barista {
        router = round-robin-pool
        nr-of-instances = 4
      }
      /caffeine-count-incremented-guest-book/barista {
        router = round-robin-pool
        nr-of-instances = 4
      }
      /caffeine-limit/barista {
        router = round-robin-pool
        nr-of-instances = 4
      }
      /guest-terminated/barista {
        router = round-robin-pool
        nr-of-instances = 4
      }
      /guest-removed/barista {
        router = round-robin-pool
        nr-of-instances = 4
      }
      /decrement-coffee-house/barista {
        router = round-robin-pool
        nr-of-instances = 4
      }
      /thanks-coffee-house/barista {
        router = round-robin-pool
        nr-of-instances = 4
      }
      /guest-stopped/barista {
        router = round-robin-pool
        nr-of-instances = 4
      }
      /resend-prepare-coffee/barista {
        router = round-robin-pool
        nr-of-instances = 4
      }
      /get-status/barista {
        router = round-robin-pool
        nr-of-instances = 4
      }
    }
  }
}

coffee-house {
  barista {
    prepare-coffee-duration = 100 milliseconds
  }
  guest {
    finish-coffee-duration = 100 milliseconds
  }
}
